on:
  push:
    branches:
      - main
      - master
  schedule:
    - cron:  '0 1 * * *'

name: Deploy Google Cloud Run

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE: peskas-timor-shiny
  REGION: asia-east1
  CONTAINER_REGISTRY: asia.gcr.io


jobs:
  update-data:
    name: Update dashboard data
    runs-on: ubuntu-latest
    container: rocker/verse:4.1.0
    env:
      SHINYAPPS_TOKEN: ${{secrets.SHINYAPPS_TOKEN}}
      SHINYAPPS_SECRET: ${{secrets.SHINYAPPS_SECRET}}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update data
        run: |
          Rscript -e 'install.packages(c("remotes"))'
          Rscript -e 'remores::install_cran(c("pkgload", "googleCloudStorageR", "data.table"), quick = TRUE)'
          Rscript -e 'source("update_data.R")'

      - name: Commit changes to md report documents
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: data/*

  deploy:
    name: Deploy shiny app
    needs: update-data
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup R
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: '4.1.0' # The R version to download (if necessary) and use.

      - name: Update data
        run: |
          Rscript -e 'install.packages(c("remotes"), repos = "https://packagemanager.rstudio.com/all/latest")'
          Rscript -e 'remotes::install_cran(c("pkgload", "googleCloudStorageR", "data.table"), quick = TRUE)'
          Rscript -e 'source("update_data.R")'

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true  # Set to true to authenticate the Cloud Run action

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and push API container
        run: |-
          docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} -f prod.Dockerfile .
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.6.0
        with:
          service: ${{ env.SERVICE }}
          image: ${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
          region: ${{ env.REGION }}
          flags: "--cpu=1 --memory=1Gi --concurrency=80 --max-instances=1"

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
